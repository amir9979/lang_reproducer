diff --git a/src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java b/src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java
index ab40b22df..168bc2ae4 100644
--- a/src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java
+++ b/src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java
@@ -799,15 +799,6 @@ public class MethodUtilsTest {
                 Annotated.class, true, true));
         assertNotNull(MethodUtils.getAnnotation(PublicChild.class.getMethod("publicAnnotatedMethod"),
                 Annotated.class, true, true));
-
-        assertNull(MethodUtils.getAnnotation(StringParameterizedChild.class.getMethod("parentNotAnnotatedMethod", String.class),
-                Annotated.class, true, true));
-        assertNotNull(MethodUtils.getAnnotation(StringParameterizedChild.class.getMethod("parentProtectedAnnotatedMethod", String.class),
-                Annotated.class, true, true));
-        assertNotNull(MethodUtils.getAnnotation(StringParameterizedChild.class.getDeclaredMethod("privateAnnotatedMethod", String.class),
-                Annotated.class, true, true));
-        assertNotNull(MethodUtils.getAnnotation(StringParameterizedChild.class.getMethod("publicAnnotatedMethod", String.class),
-                Annotated.class, true, true));
     }
 
     @Test
@@ -836,15 +827,6 @@ public class MethodUtilsTest {
                 Annotated.class, true, false));
         assertNotNull(MethodUtils.getAnnotation(PublicChild.class.getMethod("publicAnnotatedMethod"),
                 Annotated.class, true, false));
-
-        assertNull(MethodUtils.getAnnotation(StringParameterizedChild.class.getMethod("parentNotAnnotatedMethod", String.class),
-                Annotated.class, true, false));
-        assertNull(MethodUtils.getAnnotation(StringParameterizedChild.class.getMethod("parentProtectedAnnotatedMethod", String.class),
-                Annotated.class, true, false));
-        assertNull(MethodUtils.getAnnotation(StringParameterizedChild.class.getDeclaredMethod("privateAnnotatedMethod", String.class),
-                Annotated.class, true, false));
-        assertNotNull(MethodUtils.getAnnotation(StringParameterizedChild.class.getMethod("publicAnnotatedMethod", String.class),
-                Annotated.class, true, false));
     }
 
     @Test
diff --git a/src/test/java/org/apache/commons/lang3/reflect/testbed/GenericParent.java b/src/test/java/org/apache/commons/lang3/reflect/testbed/GenericParent.java
index 73b1446f0..f848567b9 100644
--- a/src/test/java/org/apache/commons/lang3/reflect/testbed/GenericParent.java
+++ b/src/test/java/org/apache/commons/lang3/reflect/testbed/GenericParent.java
@@ -25,10 +25,4 @@ public class GenericParent<T> implements GenericConsumer<T> {
     public void consume(final T t) {
     }
 
-    @Annotated
-    protected void parentProtectedAnnotatedMethod(final T t) {
-    }
-
-    public void parentNotAnnotatedMethod(final T t) {
-    }
 }
diff --git a/src/test/java/org/apache/commons/lang3/reflect/testbed/StringParameterizedChild.java b/src/test/java/org/apache/commons/lang3/reflect/testbed/StringParameterizedChild.java
index 36b7156b8..dd285bc4f 100644
--- a/src/test/java/org/apache/commons/lang3/reflect/testbed/StringParameterizedChild.java
+++ b/src/test/java/org/apache/commons/lang3/reflect/testbed/StringParameterizedChild.java
@@ -24,19 +24,4 @@ public class StringParameterizedChild extends GenericParent<String> {
     public void consume(final String t) {
         super.consume(t);
     }
-
-    @Override
-    public void parentProtectedAnnotatedMethod(final String t) {
-    }
-
-    public void parentNotAnnotatedMethod(final String t) {
-    }
-
-    @Annotated
-    private void privateAnnotatedMethod(final String t) {
-    }
-
-    @Annotated
-    public void publicAnnotatedMethod(final String t) {
-    }
 }
