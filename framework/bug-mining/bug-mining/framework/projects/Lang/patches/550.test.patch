diff --git a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
index ed7bf3418..b0ad25462 100644
--- a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
+++ b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
@@ -16,20 +16,17 @@
  */
 package org.apache.commons.lang3.builder;
 
-import org.apache.commons.lang3.builder.ToStringStyleTest.Person;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertThrows;
 
 import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
 import java.util.Date;
 import java.util.HashMap;
-import java.util.List;
 
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertThrows;
+import org.apache.commons.lang3.builder.ToStringStyleTest.Person;
+import org.junit.jupiter.api.AfterEach;
+import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Test;
 
 /**
  * Unit tests {@link org.apache.commons.lang3.builder.JsonToStringStyleTest}.
@@ -184,73 +181,6 @@ public class JsonToStringStyleTest {
                         .toString());
     }
 
-    @Test
-    public void testList() {
-        Student student = new Student();
-        ArrayList<Hobby> objects = new ArrayList<>();
-
-        objects.add(Hobby.BOOK);
-        objects.add(Hobby.SPORT);
-        objects.add(Hobby.MUSIC);
-
-        student.setHobbies(objects);
-
-        assertEquals(student.toString(), "{\"hobbies\":[\"BOOK\",\"SPORT\",\"MUSIC\"]}");
-        student.setHobbies(new ArrayList<>());
-        assertEquals(student.toString(), "{\"hobbies\":[]}");
-        student.setHobbies(null);
-        assertEquals(student.toString(), "{\"hobbies\":null}");
-    }
-
-    @Test
-    public void testArrayEnum() {
-        Teacher teacher = new Teacher();
-        Hobby[] hobbies = new Hobby[3];
-        hobbies[0] = Hobby.BOOK;
-        hobbies[1] = Hobby.SPORT;
-        hobbies[2] = Hobby.MUSIC;
-
-        teacher.setHobbies(hobbies);
-
-        assertEquals(teacher.toString(), "{\"hobbies\":[\"BOOK\",\"SPORT\",\"MUSIC\"]}");
-        teacher.setHobbies(new Hobby[0]);
-        assertEquals(teacher.toString(), "{\"hobbies\":[]}");
-        teacher.setHobbies(null);
-        assertEquals(teacher.toString(), "{\"hobbies\":null}");
-    }
-
-    @Test
-    public void testCombineListAndEnum() {
-        Teacher teacher = new Teacher();
-
-        Hobby[] teacherHobbies = new Hobby[3];
-        teacherHobbies[0] = Hobby.BOOK;
-        teacherHobbies[1] = Hobby.SPORT;
-        teacherHobbies[2] = Hobby.MUSIC;
-
-        teacher.setHobbies(teacherHobbies);
-
-        Student john = new Student();
-        john.setHobbies(Arrays.asList(Hobby.BOOK, Hobby.MUSIC));
-
-        Student alice = new Student();
-        alice.setHobbies(new ArrayList<>());
-
-        Student bob = new Student();
-        bob.setHobbies(Collections.singletonList(Hobby.BOOK));
-
-        ArrayList<Student> students = new ArrayList<>();
-        students.add(john);
-        students.add(alice);
-        students.add(bob);
-
-        AcademyClass academyClass = new AcademyClass();
-        academyClass.setStudents(students);
-        academyClass.setTeacher(teacher);
-
-        assertEquals(academyClass.toString(), "{\"students\":[{\"hobbies\":[\"BOOK\",\"MUSIC\"]},{\"hobbies\":[]},{\"hobbies\":[\"BOOK\"]}],\"teacher\":{\"hobbies\":[\"BOOK\",\"SPORT\",\"MUSIC\"]}}");
-    }
-
     @Test
     public void testPerson() {
         final Person p = new Person();
@@ -547,73 +477,4 @@ public class JsonToStringStyleTest {
          */
         Person person;
     }
-
-    enum Hobby {
-        SPORT,
-        BOOK,
-        MUSIC
-    }
-
-    enum EmptyEnum {
-    }
-
-    static class Student {
-        List<Hobby> hobbies;
-
-        public List<Hobby> getHobbies() {
-            return hobbies;
-        }
-
-        public void setHobbies(List<Hobby> hobbies) {
-            this.hobbies = hobbies;
-        }
-
-        @Override
-        public String toString() {
-            return ToStringBuilder.reflectionToString(this);
-        }
-    }
-
-    static class Teacher {
-        Hobby[] hobbies;
-
-        public Hobby[] getHobbies() {
-            return hobbies;
-        }
-
-        public void setHobbies(Hobby[] hobbies) {
-            this.hobbies = hobbies;
-        }
-
-        @Override
-        public String toString() {
-            return ToStringBuilder.reflectionToString(this);
-        }
-    }
-
-    static class AcademyClass {
-        Teacher teacher;
-        List<Student> students;
-
-        public void setTeacher(Teacher teacher) {
-            this.teacher = teacher;
-        }
-
-        public void setStudents(List<Student> students) {
-            this.students = students;
-        }
-
-        public Teacher getTeacher() {
-            return teacher;
-        }
-
-        public List<Student> getStudents() {
-            return students;
-        }
-
-        @Override
-        public String toString() {
-            return ToStringBuilder.reflectionToString(this);
-        }
-    }
 }
