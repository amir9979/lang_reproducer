diff --git a/src/java/org/apache/commons/lang/exception/ExceptionUtils.java b/src/java/org/apache/commons/lang/exception/ExceptionUtils.java
index 207cbff22..1bf19f9f1 100644
--- a/src/java/org/apache/commons/lang/exception/ExceptionUtils.java
+++ b/src/java/org/apache/commons/lang/exception/ExceptionUtils.java
@@ -123,9 +123,7 @@ public class ExceptionUtils {
         if (StringUtils.isNotEmpty(methodName) && !isCauseMethodName(methodName)) {            
             List list = getCauseMethodNameList();
             if (list.add(methodName)) {
-                synchronized(CAUSE_METHOD_NAMES) {
-                    CAUSE_METHOD_NAMES = toArray(list);
-                }
+                CAUSE_METHOD_NAMES = toArray(list);
             }
         }
     }
@@ -142,9 +140,7 @@ public class ExceptionUtils {
         if (StringUtils.isNotEmpty(methodName)) {
             List list = getCauseMethodNameList();
             if (list.remove(methodName)) {
-                synchronized(CAUSE_METHOD_NAMES) {
-                    CAUSE_METHOD_NAMES = toArray(list);
-                }
+                CAUSE_METHOD_NAMES = toArray(list);
             }
         }
     }
@@ -222,9 +218,7 @@ public class ExceptionUtils {
      * @return {@link #CAUSE_METHOD_NAMES} as a List.
      */
     private static ArrayList getCauseMethodNameList() {
-        synchronized(CAUSE_METHOD_NAMES) {
-            return new ArrayList(Arrays.asList(CAUSE_METHOD_NAMES));
-        }
+        return new ArrayList(Arrays.asList(CAUSE_METHOD_NAMES));
     }
 
     /**
@@ -237,9 +231,7 @@ public class ExceptionUtils {
      * @since 2.1
      */
     public static boolean isCauseMethodName(String methodName) {
-        synchronized(CAUSE_METHOD_NAMES) {
-            return ArrayUtils.indexOf(CAUSE_METHOD_NAMES, methodName) >= 0;
-        }
+        return ArrayUtils.indexOf(CAUSE_METHOD_NAMES, methodName) >= 0;
     }
 
     //-----------------------------------------------------------------------
@@ -275,9 +267,7 @@ public class ExceptionUtils {
      * @since 1.0
      */
     public static Throwable getCause(Throwable throwable) {
-        synchronized(CAUSE_METHOD_NAMES) {
-            return getCause(throwable, CAUSE_METHOD_NAMES);
-        }
+        return getCause(throwable, CAUSE_METHOD_NAMES);
     }
 
     /**
@@ -305,9 +295,7 @@ public class ExceptionUtils {
         Throwable cause = getCauseUsingWellKnownTypes(throwable);
         if (cause == null) {
             if (methodNames == null) {
-                synchronized(CAUSE_METHOD_NAMES) {
-                    methodNames = CAUSE_METHOD_NAMES;
-                }
+                methodNames = CAUSE_METHOD_NAMES;
             }
             for (int i = 0; i < methodNames.length; i++) {
                 String methodName = methodNames[i];
@@ -468,18 +456,16 @@ public class ExceptionUtils {
         }
 
         Class cls = throwable.getClass();
-        synchronized(CAUSE_METHOD_NAMES) {
-            for (int i = 0, isize = CAUSE_METHOD_NAMES.length; i < isize; i++) {
-                try {
-                    Method method = cls.getMethod(CAUSE_METHOD_NAMES[i], null);
-                    if (method != null && Throwable.class.isAssignableFrom(method.getReturnType())) {
-                        return true;
-                    }
-                } catch (NoSuchMethodException ignored) {
-                    // exception ignored
-                } catch (SecurityException ignored) {
-                    // exception ignored
+        for (int i = 0, isize = CAUSE_METHOD_NAMES.length; i < isize; i++) {
+            try {
+                Method method = cls.getMethod(CAUSE_METHOD_NAMES[i], null);
+                if (method != null && Throwable.class.isAssignableFrom(method.getReturnType())) {
+                    return true;
                 }
+            } catch (NoSuchMethodException ignored) {
+                // exception ignored
+            } catch (SecurityException ignored) {
+                // exception ignored
             }
         }
 
