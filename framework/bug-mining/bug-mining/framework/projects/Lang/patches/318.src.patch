diff --git a/src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java b/src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java
index 47aaf4551..be671a928 100644
--- a/src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java
+++ b/src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java
@@ -41,62 +41,62 @@ public class DateFormatUtils {
      */
     private static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone("GMT");
     /**
-     * ISO 8601 formatter for date-time without time zone.
+     * ISO8601 formatter for date-time without time zone.
      * The format used is <tt>yyyy-MM-dd'T'HH:mm:ss</tt>.
      */
     public static final FastDateFormat ISO_DATETIME_FORMAT
             = FastDateFormat.getInstance("yyyy-MM-dd'T'HH:mm:ss");
 
     /**
-     * ISO 8601 formatter for date-time with time zone.
+     * ISO8601 formatter for date-time with time zone.
      * The format used is <tt>yyyy-MM-dd'T'HH:mm:ssZZ</tt>.
      */
     public static final FastDateFormat ISO_DATETIME_TIME_ZONE_FORMAT
             = FastDateFormat.getInstance("yyyy-MM-dd'T'HH:mm:ssZZ");
 
     /**
-     * ISO 8601 formatter for date without time zone.
+     * ISO8601 formatter for date without time zone.
      * The format used is <tt>yyyy-MM-dd</tt>.
      */
     public static final FastDateFormat ISO_DATE_FORMAT
             = FastDateFormat.getInstance("yyyy-MM-dd");
 
     /**
-     * ISO 8601-like formatter for date with time zone.
+     * ISO8601-like formatter for date with time zone.
      * The format used is <tt>yyyy-MM-ddZZ</tt>.
-     * This pattern does not comply with the formal ISO 8601 specification
+     * This pattern does not comply with the formal ISO8601 specification
      * as the standard does not allow a time zone  without a time.
      */
     public static final FastDateFormat ISO_DATE_TIME_ZONE_FORMAT
             = FastDateFormat.getInstance("yyyy-MM-ddZZ");
 
     /**
-     * ISO 8601 formatter for time without time zone.
+     * ISO8601 formatter for time without time zone.
      * The format used is <tt>'T'HH:mm:ss</tt>.
      */
     public static final FastDateFormat ISO_TIME_FORMAT
             = FastDateFormat.getInstance("'T'HH:mm:ss");
 
     /**
-     * ISO 8601 formatter for time with time zone.
+     * ISO8601 formatter for time with time zone.
      * The format used is <tt>'T'HH:mm:ssZZ</tt>.
      */
     public static final FastDateFormat ISO_TIME_TIME_ZONE_FORMAT
             = FastDateFormat.getInstance("'T'HH:mm:ssZZ");
 
     /**
-     * ISO 8601-like formatter for time without time zone.
+     * ISO8601-like formatter for time without time zone.
      * The format used is <tt>HH:mm:ss</tt>.
-     * This pattern does not comply with the formal ISO 8601 specification
+     * This pattern does not comply with the formal ISO8601 specification
      * as the standard requires the 'T' prefix for times.
      */
     public static final FastDateFormat ISO_TIME_NO_T_FORMAT
             = FastDateFormat.getInstance("HH:mm:ss");
 
     /**
-     * ISO 8601-like formatter for time with time zone.
+     * ISO8601-like formatter for time with time zone.
      * The format used is <tt>HH:mm:ssZZ</tt>.
-     * This pattern does not comply with the formal ISO 8601 specification
+     * This pattern does not comply with the formal ISO8601 specification
      * as the standard requires the 'T' prefix for times.
      */
     public static final FastDateFormat ISO_TIME_NO_T_TIME_ZONE_FORMAT
diff --git a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
index 4fe626f19..80fe90727 100644
--- a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
+++ b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
@@ -61,7 +61,7 @@ public class DurationFormatUtils {
 
     /**
      * <p>Pattern used with <code>FastDateFormat</code> and <code>SimpleDateFormat</code>
-     * for the ISO 8601 period format used in durations.</p>
+     * for the ISO8601 period format used in durations.</p>
      * 
      * @see org.apache.commons.lang3.time.FastDateFormat
      * @see java.text.SimpleDateFormat
@@ -72,7 +72,7 @@ public class DurationFormatUtils {
     /**
      * <p>Formats the time gap as a string.</p>
      * 
-     * <p>The format used is ISO 8601-like:
+     * <p>The format used is ISO8601-like:
      * <i>H</i>:<i>m</i>:<i>s</i>.<i>S</i>.</p>
      * 
      * @param durationMillis  the duration to format
@@ -85,7 +85,7 @@ public class DurationFormatUtils {
     /**
      * <p>Formats the time gap as a string.</p>
      * 
-     * <p>The format used is the ISO 8601 period format.</p>
+     * <p>The format used is the ISO8601 period format.</p>
      * 
      * <p>This method formats durations using the days and lower fields of the
      * ISO format pattern, such as P7D6TH5M4.321S.</p>
@@ -221,7 +221,7 @@ public class DurationFormatUtils {
     /**
      * <p>Formats the time gap as a string.</p>
      * 
-     * <p>The format used is the ISO 8601 period format.</p>
+     * <p>The format used is the ISO8601 period format.</p>
      * 
      * @param startMillis  the start of the duration to format
      * @param endMillis  the end of the duration to format
diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
index 7f1722059..bc88b20e1 100644
--- a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
+++ b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
@@ -57,7 +57,7 @@ import java.util.TimeZone;
  * This pattern letter can be used here (on all JDK versions).</p>
  *
  * <p>In addition, the pattern {@code 'ZZ'} has been made to represent
- * ISO 8601 full format time zones (eg. {@code +08:00} or {@code -11:00}).
+ * ISO8601 full format time zones (eg. {@code +08:00} or {@code -11:00}).
  * This introduces a minor incompatibility with Java 1.4, but at a gain of
  * useful functionality.</p>
  *
diff --git a/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java b/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
index 2f2bafd9e..cea70c465 100644
--- a/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
+++ b/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
@@ -61,7 +61,7 @@ import org.apache.commons.lang3.Validate;
  * This pattern letter can be used here (on all JDK versions).</p>
  *
  * <p>In addition, the pattern {@code 'ZZ'} has been made to represent
- * ISO 8601 full format time zones (eg. {@code +08:00} or {@code -11:00}).
+ * ISO8601 full format time zones (eg. {@code +08:00} or {@code -11:00}).
  * This introduces a minor incompatibility with Java 1.4, but at a gain of
  * useful functionality.</p>
  *
diff --git a/src/main/java/org/apache/commons/lang3/time/StopWatch.java b/src/main/java/org/apache/commons/lang3/time/StopWatch.java
index 953479344..5d90ccf04 100644
--- a/src/main/java/org/apache/commons/lang3/time/StopWatch.java
+++ b/src/main/java/org/apache/commons/lang3/time/StopWatch.java
@@ -407,7 +407,7 @@ public class StopWatch {
      * </p>
      * 
      * <p>
-     * The format used is ISO 8601-like, <i>hours</i>:<i>minutes</i>:<i>seconds</i>.<i>milliseconds</i>.
+     * The format used is ISO8601-like, <i>hours</i>:<i>minutes</i>:<i>seconds</i>.<i>milliseconds</i>.
      * </p>
      * 
      * @return the time as a String
@@ -423,7 +423,7 @@ public class StopWatch {
      * </p>
      * 
      * <p>
-     * The format used is ISO 8601-like, <i>hours</i>:<i>minutes</i>:<i>seconds</i>.<i>milliseconds</i>.
+     * The format used is ISO8601-like, <i>hours</i>:<i>minutes</i>:<i>seconds</i>.<i>milliseconds</i>.
      * </p>
      * 
      * @return the split time as a String
