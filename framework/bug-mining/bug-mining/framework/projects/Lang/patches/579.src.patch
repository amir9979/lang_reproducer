diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
index 50c09236f..45c5dbf1b 100644
--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
@@ -668,13 +668,12 @@ public class NumberUtils {
             throw new NumberFormatException("A blank string is not a valid number");
         }
         // Need to deal with all possible hex prefixes here
-        final String[] hex_prefixes = {"0x", "0X", "#"};
+        final String[] hex_prefixes = {"0x", "0X", "-0x", "-0X", "#", "-#"};
         final int length = str.length();
-        final int offset = str.charAt(0) == '+' || str.charAt(0) == '-' ? 1 : 0;
         int pfxLen = 0;
         for (final String pfx : hex_prefixes) {
-            if (str.startsWith(pfx, offset)) {
-                pfxLen += pfx.length() + offset;
+            if (str.startsWith(pfx)) {
+                pfxLen += pfx.length();
                 break;
             }
         }
@@ -963,18 +962,12 @@ public class NumberUtils {
         if (str == null) {
             return null;
         }
-        if (str.isEmpty()) {
-            throw new NumberFormatException("An empty string is not a valid number");
-        }
         int pos = 0; // offset within string
         int radix = 10;
         boolean negate = false; // need to negate later?
-        final char char0 = str.charAt(0);
-        if (char0 == '-') {
+        if (str.startsWith("-")) {
             negate = true;
             pos = 1;
-        } else if (char0 == '+') {
-            pos = 1;
         }
         if (str.startsWith("0x", pos) || str.startsWith("0X", pos)) { // hex
             radix = 16;
