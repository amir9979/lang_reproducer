diff --git a/src/main/java/org/apache/commons/lang3/StringEscapeUtils.java b/src/main/java/org/apache/commons/lang3/StringEscapeUtils.java
index 713c4bfcd..2268c4f6e 100644
--- a/src/main/java/org/apache/commons/lang3/StringEscapeUtils.java
+++ b/src/main/java/org/apache/commons/lang3/StringEscapeUtils.java
@@ -185,7 +185,7 @@ public class StringEscapeUtils {
                 out.write(StringUtils.replace(input.toString(), CSV_QUOTE_STR, CSV_QUOTE_STR + CSV_QUOTE_STR));
                 out.write(CSV_QUOTE);
             }
-            return Character.codePointCount(input, 0, input.length());
+            return input.length();
         }
     }
 
@@ -314,7 +314,7 @@ public class StringEscapeUtils {
 
             if ( input.charAt(0) != CSV_QUOTE || input.charAt(input.length() - 1) != CSV_QUOTE ) {
                 out.write(input.toString());
-                return Character.codePointCount(input, 0, input.length());
+                return input.length();
             }
 
             // strip quotes
@@ -326,7 +326,7 @@ public class StringEscapeUtils {
             } else {
                 out.write(input.toString());
             }
-            return Character.codePointCount(input, 0, input.length());
+            return input.length();
         }
     }
 
diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java
index ab20e5b0e..0351c6d3e 100644
--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java
+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java
@@ -89,10 +89,10 @@ public abstract class CharSequenceTranslator {
                 pos+= c.length;
                 continue;
             }
-            // contract with translators is that they have to understand codepoints
-            // and they just took care of a surrogate pair
+//          // contract with translators is that they have to understand codepoints 
+//          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
+                pos += Character.charCount(Character.codePointAt(input, pt));
             }
         }
     }
