diff --git a/src/main/java/org/apache/commons/lang3/EnumUtils.java b/src/main/java/org/apache/commons/lang3/EnumUtils.java
index 699a21539..f98506208 100644
--- a/src/main/java/org/apache/commons/lang3/EnumUtils.java
+++ b/src/main/java/org/apache/commons/lang3/EnumUtils.java
@@ -144,7 +144,7 @@ public class EnumUtils {
         long total = 0;
         for (final E constant : values) {
             Validate.isTrue(constant != null, NULL_ELEMENTS_NOT_PERMITTED);
-            total |= 1L << constant.ordinal();
+            total |= 1 << constant.ordinal();
         }
         return total;
     }
@@ -175,7 +175,7 @@ public class EnumUtils {
         }
         final long[] result = new long[(enumClass.getEnumConstants().length - 1) / Long.SIZE + 1];
         for (final E value : condensed) {
-            result[value.ordinal() / Long.SIZE] |= 1L << (value.ordinal() % Long.SIZE);
+            result[value.ordinal() / Long.SIZE] |= 1 << (value.ordinal() % Long.SIZE);
         }
         ArrayUtils.reverse(result);
         return result;
@@ -226,7 +226,7 @@ public class EnumUtils {
         Collections.addAll(condensed, values);
         final long[] result = new long[(enumClass.getEnumConstants().length - 1) / Long.SIZE + 1];
         for (final E value : condensed) {
-            result[value.ordinal() / Long.SIZE] |= 1L << (value.ordinal() % Long.SIZE);
+            result[value.ordinal() / Long.SIZE] |= 1 << (value.ordinal() % Long.SIZE);
         }
         ArrayUtils.reverse(result);
         return result;
@@ -269,7 +269,7 @@ public class EnumUtils {
         ArrayUtils.reverse(lvalues);
         for (final E constant : enumClass.getEnumConstants()) {
             final int block = constant.ordinal() / Long.SIZE;
-            if (block < lvalues.length && (lvalues[block] & 1L << (constant.ordinal() % Long.SIZE)) != 0) {
+            if (block < lvalues.length && (lvalues[block] & 1 << (constant.ordinal() % Long.SIZE)) != 0) {
                 results.add(constant);
             }
         }
