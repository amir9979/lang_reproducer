diff --git a/src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java b/src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java
index 6c2199b73..d172b1e17 100644
--- a/src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java
+++ b/src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java
@@ -362,13 +362,6 @@ public class ReflectionToStringBuilder extends ToStringBuilder {
     public static String toStringExclude(final Object object, final String... excludeFieldNames) {
         return new ReflectionToStringBuilder(object).setExcludeFieldNames(excludeFieldNames).toString();
     }
-    
-    private static Object checkNotNull(final Object obj) {
-        if (obj == null) {
-            throw new IllegalArgumentException("The Object passed in should not be null.");
-        }
-        return obj;
-    }
 
     /**
      * Whether or not to append static fields.
@@ -407,7 +400,7 @@ public class ReflectionToStringBuilder extends ToStringBuilder {
      *             if the Object passed in is <code>null</code>
      */
     public ReflectionToStringBuilder(final Object object) {
-        super(checkNotNull(object));
+        super(object);
     }
 
     /**
@@ -427,7 +420,7 @@ public class ReflectionToStringBuilder extends ToStringBuilder {
      *             if the Object passed in is <code>null</code>
      */
     public ReflectionToStringBuilder(final Object object, final ToStringStyle style) {
-        super(checkNotNull(object), style);
+        super(object, style);
     }
 
     /**
@@ -453,7 +446,7 @@ public class ReflectionToStringBuilder extends ToStringBuilder {
      *             if the Object passed in is <code>null</code>
      */
     public ReflectionToStringBuilder(final Object object, final ToStringStyle style, final StringBuffer buffer) {
-        super(checkNotNull(object), style, buffer);
+        super(object, style, buffer);
     }
 
     /**
@@ -478,7 +471,7 @@ public class ReflectionToStringBuilder extends ToStringBuilder {
     public <T> ReflectionToStringBuilder(
             final T object, final ToStringStyle style, final StringBuffer buffer,
             final Class<? super T> reflectUpToClass, final boolean outputTransients, final boolean outputStatics) {
-        super(checkNotNull(object), style, buffer);
+        super(object, style, buffer);
         this.setUpToClass(reflectUpToClass);
         this.setAppendTransients(outputTransients);
         this.setAppendStatics(outputStatics);
