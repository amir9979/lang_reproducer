diff --git a/src/java/org/apache/commons/lang3/text/StrLookup.java b/src/java/org/apache/commons/lang3/text/StrLookup.java
index 6f94eedac..2f1cef85b 100644
--- a/src/java/org/apache/commons/lang3/text/StrLookup.java
+++ b/src/java/org/apache/commons/lang3/text/StrLookup.java
@@ -40,19 +40,16 @@ public abstract class StrLookup<V> {
     /**
      * Lookup that always returns null.
      */
-    private static final StrLookup<String> NONE_LOOKUP;
+    private static final StrLookup<?> NONE_LOOKUP;
     /**
      * Lookup that uses System properties.
      */
-    private static final StrLookup<String> SYSTEM_PROPERTIES_LOOKUP;
+    private static final StrLookup<Object> SYSTEM_PROPERTIES_LOOKUP;
     static {
-        NONE_LOOKUP = new MapStrLookup<String>(null);
-        StrLookup<String> lookup = null;
+        NONE_LOOKUP = new MapStrLookup(null);
+        StrLookup lookup = null;
         try {
-            final Map<?, ?> propMap = System.getProperties();
-            @SuppressWarnings("unchecked") // System property keys and values are always Strings
-            final Map<String, String> properties = (Map<String, String>) propMap;
-            lookup = new MapStrLookup<String>(properties);
+            lookup = new MapStrLookup(System.getProperties());
         } catch (SecurityException ex) {
             lookup = NONE_LOOKUP;
         }
@@ -80,7 +77,7 @@ public abstract class StrLookup<V> {
      *
      * @return a lookup using system properties, not null
      */
-    public static StrLookup<String> systemPropertiesLookup() {
+    public static StrLookup<Object> systemPropertiesLookup() {
         return SYSTEM_PROPERTIES_LOOKUP;
     }
 
@@ -93,7 +90,7 @@ public abstract class StrLookup<V> {
      * @param map  the map of keys to values, may be null
      * @return a lookup using the map, not null
      */
-    public static <V> StrLookup<V> mapLookup(Map<String, V> map) {
+    public static <V> StrLookup mapLookup(Map<String, V> map) {
         return new MapStrLookup<V>(map);
     }
 
@@ -127,7 +124,7 @@ public abstract class StrLookup<V> {
     /**
      * Lookup implementation that uses a Map.
      */
-    static class MapStrLookup<V> extends StrLookup<V> {
+    static class MapStrLookup<V> extends StrLookup {
 
         /** Map keys are variable names and value. */
         private final Map<String, V> map;
