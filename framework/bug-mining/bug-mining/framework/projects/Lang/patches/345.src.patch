diff --git a/src/main/java/org/apache/commons/lang3/CharSet.java b/src/main/java/org/apache/commons/lang3/CharSet.java
index 5adae758f..82f0b9a8c 100644
--- a/src/main/java/org/apache/commons/lang3/CharSet.java
+++ b/src/main/java/org/apache/commons/lang3/CharSet.java
@@ -115,7 +115,6 @@ public class CharSet implements Serializable {
      *  <li>Negated single character, such as "^a"
      *  <li>Ordinary single character, such as "a"
      * </ol>
-     * 
      * <p>Matching works left to right. Once a match is found the
      * search starts again from the next character.</p>
      *
@@ -129,24 +128,7 @@ public class CharSet implements Serializable {
      * as the "a-e" and "e-a" are the same.</p>
      *
      * <p>The set of characters represented is the union of the specified ranges.</p>
-     * 
-     * <p>There are two ways to add a literal negation character ({@code ^}):</p>
-     * <ul>
-     *     <li>As the last character in a string, e.g. {@code CharSet.getInstance("a-z^")}</li>
-     *     <li>As a separate element, e.g. {@code CharSet.getInstance("^","a-z")}</li>
-     * </ul>
      *
-     * <p>Examples using the negation character:</p>
-     * <pre>
-     *     CharSet.getInstance("^a-c").contains('a') = false
-     *     CharSet.getInstance("^a-c").contains('d') = true
-     *     CharSet.getInstance("^^a-c").contains('a') = true // (only '^' is negated)
-     *     CharSet.getInstance("^^a-c").contains('^') = false
-     *     CharSet.getInstance("^a-cd-f").contains('d') = true 
-     *     CharSet.getInstance("a-c^").contains('^') = true
-     *     CharSet.getInstance("^", "a-c").contains('^') = true
-     * </pre>
-     * 
      * <p>All CharSet objects returned by this method will be immutable.</p>
      *
      * @param setStrs  Strings to merge into the set, may be null
