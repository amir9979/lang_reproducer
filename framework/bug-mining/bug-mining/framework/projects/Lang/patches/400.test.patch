diff --git a/src/test/java/org/apache/commons/lang3/exception/ExceptionUtilsTest.java b/src/test/java/org/apache/commons/lang3/exception/ExceptionUtilsTest.java
index 0b2ce4802..97a2bfc37 100644
--- a/src/test/java/org/apache/commons/lang3/exception/ExceptionUtilsTest.java
+++ b/src/test/java/org/apache/commons/lang3/exception/ExceptionUtilsTest.java
@@ -32,7 +32,6 @@ import java.lang.reflect.Constructor;
 import java.lang.reflect.Modifier;
 import java.util.List;
 
-import org.apache.commons.lang3.test.NotVisibleExceptionFactory;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;
@@ -40,6 +39,23 @@ import org.junit.Test;
 
 /**
  * Tests {@link org.apache.commons.lang3.exception.ExceptionUtils}.
+ * 
+ * <h3>Notes</h3>
+ * <p>
+ * Make sure this exception code does not depend on Java 1.4 nested exceptions. SVN revision 38990 does not compile with
+ * Java 1.3.1.
+ * </p>
+ * <ul>
+ * <li>Compiled with Sun Java 1.3.1_15</li>
+ * <li>Tested with Sun Java 1.3.1_15</li>
+ * <li>Tested with Sun Java 1.4.2_12</li>
+ * <li>Tested with Sun Java 1.5.0_08</li>
+ * <li>All of the above on Windows XP SP2 + patches.</li>
+ * </ul>
+ * <p>
+ * Gary Gregory; August 16, 2006.
+ * </p>
+ * 
  * @since 1.0
  */
 public class ExceptionUtilsTest {
@@ -49,7 +65,6 @@ public class ExceptionUtilsTest {
     private Throwable withoutCause;
     private Throwable jdkNoCause;
     private ExceptionWithCause cyclicCause;
-    private Throwable notVisibleException;
 
 
     @Before
@@ -62,7 +77,6 @@ public class ExceptionUtilsTest {
         final ExceptionWithCause b = new ExceptionWithCause(a);
         a.setCause(b);
         cyclicCause = new ExceptionWithCause(a);
-        notVisibleException = NotVisibleExceptionFactory.createException(withoutCause);
     }
 
 
@@ -73,7 +87,6 @@ public class ExceptionUtilsTest {
         withCause = null;
         jdkNoCause = null;
         cyclicCause = null;
-        notVisibleException = null;
     }
 
     //-----------------------------------------------------------------------
@@ -121,7 +134,6 @@ public class ExceptionUtilsTest {
         assertSame(cyclicCause.getCause(), ExceptionUtils.getCause(cyclicCause));
         assertSame(((ExceptionWithCause) cyclicCause.getCause()).getCause(), ExceptionUtils.getCause(cyclicCause.getCause()));
         assertSame(cyclicCause.getCause(), ExceptionUtils.getCause(((ExceptionWithCause) cyclicCause.getCause()).getCause()));
-        assertSame(withoutCause, ExceptionUtils.getCause(notVisibleException));
     }
 
     @SuppressWarnings("deprecation") // Specifically tests the deprecated methods
diff --git a/src/test/java/org/apache/commons/lang3/test/NotVisibleExceptionFactory.java b/src/test/java/org/apache/commons/lang3/test/NotVisibleExceptionFactory.java
deleted file mode 100644
index 70c1289f9..000000000
--- a/src/test/java/org/apache/commons/lang3/test/NotVisibleExceptionFactory.java
+++ /dev/null
@@ -1,34 +0,0 @@
-package org.apache.commons.lang3.test;
-
-/**
- * Allows for testing an exception that is not visible to
- * {@link org.apache.commons.lang3.exception.ExceptionUtils}
- */
-public class NotVisibleExceptionFactory {
-
-  private NotVisibleExceptionFactory() {}
-
-  /**
-   * Create a new Exception whose getCause method returns the
-   * provided cause.
-   * @param cause the cause of the exception
-   * @return a new {@link Exception}
-   */
-  public static Exception createException(final Throwable cause) {
-    return new NotVisibleException(cause);
-  }
-
-  private static class NotVisibleException extends Exception {
-
-    private final Throwable cause;
-
-    private NotVisibleException(Throwable cause) {
-      this.cause = cause;
-    }
-
-    @Override
-    public Throwable getCause() {
-      return cause;
-    }
-  }
-}
