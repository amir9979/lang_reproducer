diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
index 1776164e3..03b883f4d 100644
--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
@@ -22,7 +22,6 @@ import java.io.Serializable;
 import java.text.DateFormatSymbols;
 import java.text.ParseException;
 import java.text.ParsePosition;
-import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Calendar;
@@ -56,13 +55,6 @@ import java.util.regex.Pattern;
  * <p>Timing tests indicate this class is as about as fast as SimpleDateFormat
  * in single thread applications and about 25% faster in multi-thread applications.</p>
  *
- * <p>Note that the code only handles Gregorian calendars. The following non-Gregorian
- * calendars use SimpleDateFormat internally, and so will be slower:
- * <ul>
- * <li>ja_JP_TH - Japanese Imperial</li>
- * <li>th_TH (any variant) - Thai Buddhist</li>
- * </ul>
- * </p>
  * @since 3.2
  */
 public class FastDateParser implements DateParser, Serializable {
@@ -122,17 +114,7 @@ public class FastDateParser implements DateParser, Serializable {
         if(!patternMatcher.lookingAt()) {
             throw new IllegalArgumentException("Invalid pattern");
         }
-
-        String localeName = locale.toString();
-        // These locales don't use the Gregorian calendar
-        // See http://docs.oracle.com/javase/6/docs/technotes/guides/intl/calendar.doc.html
-        if (localeName.equals("ja_JP_JP") || localeName.startsWith("th_TH")) {
-            collector.add(new SimpleDateFormatStrategy());
-            strategies= collector.toArray(new Strategy[collector.size()]);
-            parsePattern= Pattern.compile("(.*+)");
-            return;
-        }
-
+        
         currentFormatField= patternMatcher.group();
         Strategy currentStrategy= getStrategy(currentFormatField);
         for(;;) {
@@ -815,38 +797,6 @@ public class FastDateParser implements DateParser, Serializable {
         }        
     }
 
-
-    /**
-     * Dummy strategy which delegates to SimpleDateFormat.
-     */
-    private static class SimpleDateFormatStrategy implements Strategy {
-
-        @Override
-        public boolean isNumber() {
-            return false;
-        }
-
-        @Override
-        public void setCalendar(FastDateParser parser, Calendar cal, String value) {
-            String pat = parser.pattern;
-            Locale loc = parser.locale;
-            SimpleDateFormat sdf = new SimpleDateFormat(pat, loc);
-            try {
-                Date d = sdf.parse(value);
-                cal.setTime(d);
-            } catch (ParseException e) {
-                throw new IllegalArgumentException(
-                        "Unexpected error using pattern " + pat + " with locale " + loc.toString(), e);
-            }
-        }
-
-        @Override
-        public boolean addRegex(FastDateParser parser, StringBuilder regex) {
-            return false;
-        }
-        
-    }
-
     private static final Strategy ERA_STRATEGY = new TextStrategy(Calendar.ERA);
     private static final Strategy DAY_OF_WEEK_STRATEGY = new TextStrategy(Calendar.DAY_OF_WEEK);
     private static final Strategy AM_PM_STRATEGY = new TextStrategy(Calendar.AM_PM);
