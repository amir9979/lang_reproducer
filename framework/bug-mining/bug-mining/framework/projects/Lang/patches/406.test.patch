diff --git a/src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java b/src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java
index b26854682..f33bf42de 100644
--- a/src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java
+++ b/src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java
@@ -19,6 +19,7 @@ package org.apache.commons.lang3.builder;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNull;
+
 import org.junit.Test;
 
 /**
@@ -30,6 +31,8 @@ public class HashCodeBuilderTest {
      * A reflection test fixture.
      */
     static class ReflectionTestCycleA {
+        int index = 10;
+        String name = "ReflectionTestCycleA";
         ReflectionTestCycleB b;
 
         @Override
@@ -42,6 +45,8 @@ public class HashCodeBuilderTest {
      * A reflection test fixture.
      */
     static class ReflectionTestCycleB {
+        int index = 11;
+        String name = "ReflectionTestCycleB";
         ReflectionTestCycleA a;
 
         @Override
@@ -50,6 +55,42 @@ public class HashCodeBuilderTest {
         }
     }
 
+    /**
+     * A nonreflection test fixture.
+     */
+    static class NonreflectionTestCycleA {
+        int index = 20;
+        String name = "NonreflectionTestCycleA";
+        NonreflectionTestCycleB b;
+
+        @Override
+        public int hashCode() {
+            HashCodeBuilder builder = new HashCodeBuilder();
+            builder.append(index);
+            builder.append(name);
+            builder.append(b);
+            return builder.toHashCode();
+        }
+    }
+
+    /**
+     * A nonreflection test fixture.
+     */
+    static class NonreflectionTestCycleB {
+        int index = 21;
+        String name = "NonreflectionTestCycleB";
+        NonreflectionTestCycleA a;
+
+        @Override
+        public int hashCode() {
+            HashCodeBuilder builder = new HashCodeBuilder();
+            builder.append(index);
+            builder.append(name);
+            builder.append(a);
+            return builder.toHashCode();
+        }
+    }
+
     // -----------------------------------------------------------------------
 
     @Test(expected=IllegalArgumentException.class)
@@ -521,7 +562,7 @@ public class HashCodeBuilderTest {
     }
 
     /**
-     * Test Objects pointing to each other.
+     * Test Objects pointing to each other when {@link HashCodeBuilder#reflectionHashCode(Object, String...)} used.
      */
     @Test
     public void testReflectionObjectCycle() {
@@ -553,6 +594,22 @@ public class HashCodeBuilderTest {
         assertNull(HashCodeBuilder.getRegistry());
     }
 
+    /**
+     * Test Objects pointing to each other when <code>append()</code> methods are used on <code>HashCodeBuilder</code> instance.
+     */
+    @Test
+    public void testNonreflectionObjectCycle() {
+        final NonreflectionTestCycleA a = new NonreflectionTestCycleA();
+        final NonreflectionTestCycleB b = new NonreflectionTestCycleB();
+        a.b = b;
+        b.a = a;
+
+        a.hashCode();
+        assertNull(HashCodeBuilder.getRegistry());
+        b.hashCode();
+        assertNull(HashCodeBuilder.getRegistry());
+    }
+
     /**
      * Ensures LANG-520 remains true
      */
