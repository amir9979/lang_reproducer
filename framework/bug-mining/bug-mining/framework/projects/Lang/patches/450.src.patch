diff --git a/src/main/java/org/apache/commons/lang3/concurrent/LazyInitializer.java b/src/main/java/org/apache/commons/lang3/concurrent/LazyInitializer.java
index 2b2f72d23..ed840498d 100644
--- a/src/main/java/org/apache/commons/lang3/concurrent/LazyInitializer.java
+++ b/src/main/java/org/apache/commons/lang3/concurrent/LazyInitializer.java
@@ -79,11 +79,11 @@ package org.apache.commons.lang3.concurrent;
  */
 public abstract class LazyInitializer<T> implements ConcurrentInitializer<T> {
 
-    private static final Object NO_INIT = new Object();
+    private static final Object noInit = new Object();
 
     @SuppressWarnings("unchecked")
     /** Stores the managed object. */
-    private volatile T object = (T) NO_INIT;
+    private volatile T object = (T) noInit;
 
     /**
      * Returns the object wrapped by this instance. On first access the object
@@ -99,10 +99,10 @@ public abstract class LazyInitializer<T> implements ConcurrentInitializer<T> {
         // volatile field
         T result = object;
 
-        if (result == NO_INIT) {
+        if (result == noInit) {
             synchronized (this) {
                 result = object;
-                if (result == NO_INIT) {
+                if (result == noInit) {
                     object = result = initialize();
                 }
             }
